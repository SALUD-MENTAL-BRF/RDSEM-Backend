// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String @unique
  email String @unique
  password String?

  googleId String?
  imageUrl String?

  // Relaciones
  rol Role @relation(fields: [roleId], references: [id])
  roleId Int @default(1)

  patient Patient[]
  professional Professional[]
  requestProfessional RequestProfessional[]
  publication Publication[]
}


model Role {
  id Int @id @default(autoincrement())
  type String


  //Relations
  user User[]
}

model HistoryPatient {
  id Int @id @default(autoincrement())


  //Relations
  patient Patient @relation(fields: [patientId], references: [id])
  patientId Int
}

model Patient {
  id Int @id @default(autoincrement())
  type String
  fullName String

  //Relations
  user User @relation(fields: [userId], references: [id])
  userId Int
  professional Professional[]
  historyPatient9 HistoryPatient[]
}


model Professional {
  id Int @id @default(autoincrement())
  fullName String
  title String
  certification String

  //Relations
  user User @relation(fields: [userId], references: [id]) 
  userId Int
  patient Patient[]
}

// model ProfessionalToPatient{
  
// }

model RequestProfessional {
  id Int @id @default(autoincrement())
  fullname String
  title String
  certification String
  experience String


  //Relations
  user User @relation(fields: [userId], references: [id])
  userId Int
}

model Publication {
  id Int @id @default(autoincrement())
  title String
  content String

  //Relations
  user User @relation(fields: [userId], references: [id])
  userId Int
}